{"version":3,"file":"static/js/395.2b35837b.chunk.js","mappings":"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","sources":["components/MoviesGallery/MoviesGallery.styled.js","components/MoviesGallery/MoviesGallery.jsx","helpers/Api.js","pages/movies/Movies.styled.js","pages/movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MoviesItem = styled.li`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n  max-width: 300px;\n  border: 1px solid #95b1b0;\n  border-radius: 5px;\n  overflow: hidden;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const MovieCard = styled.img`\n  width: 100%;\n  height: 417px;\n  border-radius: 5px;\n  overflow: hidden;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n`;\n\nexport const MovieName = styled.p`\n  font-weight: 600;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MoviesItem,\n  MoviesList,\n  MovieCard,\n  MovieName,\n} from './MoviesGallery.styled';\n\nexport const MoviesGallery = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <main>\n      <MoviesList>\n        {movies.map(({ id, poster_path, title, name }) => {\n          const imageUrl =\n            poster_path !== null\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : 'https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj';\n          return (\n            <MoviesItem key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <MovieCard src={imageUrl} alt={title || name} />\n                <MovieName>{title || name}</MovieName>\n              </Link>\n            </MoviesItem>\n          );\n        })}\n      </MoviesList>\n    </main>\n  );\n};\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import axios from 'axios';\n\nconst API_KEY = 'c40ae92f6b073ed52dd8d039ab6b6211';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrending = async () => {\n  const res = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const res = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const fetchMovieByName = async movieName => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${movieName}&language=en-US&page=1&include_adult=false`\n  );\n  return res.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const res = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const res = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 10px;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2);\n       0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  background-color: #ffffff;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieByName } from 'helpers/Api';\nimport { MoviesGallery } from 'components/MoviesGallery/MoviesGallery';\nimport { Input, SearchButton, SearchForm } from 'pages/movies/Movies.styled';\nimport { BsSearch } from 'react-icons/bs';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [params, setParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = params.get('query') ?? '';\n\n    if (!query) {\n      return;\n    }\n\n    async function getMoviesByName() {\n      try {\n        const data = await fetchMovieByName(query);\n\n        setSearchMovies(data.results);\n      } catch {\n        console.log('error');\n      }\n    }\n    getMoviesByName();\n  }, [params]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const nextParams = query !== '' ? { query } : {};\n    setParams(nextParams);\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchButton type=\"submit\">\n          <BsSearch size=\"2em\" />\n        </SearchButton>\n\n        <Input\n          type=\"text\"\n          name=\"input\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie by name\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n      </SearchForm>\n      {searchMovies.length > 0 && <MoviesGallery movies={searchMovies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesList","styled","MoviesItem","MovieCard","MovieName","MoviesGallery","movies","location","useLocation","map","id","poster_path","title","name","imageUrl","to","state","from","src","alt","API_KEY","axios","fetchTrending","res","data","fetchMovieById","movieId","fetchMovieByName","movieName","fetchMovieCast","fetchMovieReviews","SearchForm","SearchButton","Input","useState","query","setQuery","searchMovies","setSearchMovies","useSearchParams","params","setParams","useEffect","get","results","console","log","getMoviesByName","onSubmit","e","preventDefault","type","size","autocomplete","autoFocus","placeholder","value","onChange","target","length"],"sourceRoot":""}