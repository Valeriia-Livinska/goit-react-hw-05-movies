{"version":3,"file":"static/js/387.53990e29.chunk.js","mappings":"+QAEaA,EAAWC,EAAAA,GAAAA,GAAH,iOAWRC,EAAWD,EAAAA,GAAAA,GAAH,yTAYRE,EAAWF,EAAAA,GAAAA,IAAH,0GAORG,EAAWH,EAAAA,GAAAA,EAAH,oE,SCcrB,EAzCa,WACX,OAAwBI,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAeH,GAFtC,OAEUI,EAFV,OAGIL,EAAQK,EAAKN,MAHjB,gDAKIO,QAAQC,IAAI,SALhB,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACP,IAECF,GAKH,SAACN,EAAD,UACGM,EAAKU,KAAI,YAAwC,IAArCC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACtBC,EACa,OAAjBD,EAAA,yCACsCA,GAClC,4HACN,OACE,UAACjB,EAAD,YACE,SAACC,EAAD,CAAUkB,IAAKD,EAAUE,IAAKJ,KAC9B,SAACd,EAAD,UAAWc,KACX,wCACA,uBAAID,MAJSC,EAOlB,MAlBI,IAqBV,C,8LC1CKK,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAa,mCAAG,oGACTD,EAAAA,EAAAA,IAAA,oCAAuCD,IAD9B,cACrBG,EADqB,yBAEpBA,EAAId,MAFgB,2CAAH,qDAKbe,EAAc,mCAAG,WAAMnB,GAAN,uFACVgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,oBAAuCe,IAD7B,cACtBG,EADsB,yBAErBA,EAAId,MAFiB,2CAAH,sDAKdgB,EAAgB,mCAAG,WAAMC,GAAN,uFACZL,EAAAA,EAAAA,IAAA,gCACSD,EADT,kBAC0BM,EAD1B,+CADY,cACxBH,EADwB,yBAIvBA,EAAId,MAJmB,2CAAH,sDAOhBD,EAAc,mCAAG,WAAMH,GAAN,uFACVgB,EAAAA,EAAAA,IAAA,iBACNhB,EADM,4BACqBe,EADrB,oBADU,cACtBG,EADsB,yBAIrBA,EAAId,MAJiB,2CAAH,sDAOdkB,EAAiB,mCAAG,WAAMtB,GAAN,uFACbgB,EAAAA,EAAAA,IAAA,iBACNhB,EADM,4BACqBe,EADrB,2BADa,cACzBG,EADyB,yBAIxBA,EAAId,MAJoB,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","helpers/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const CastItem = styled.li`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n  max-width: 200px;\n  border: 1px solid #95b1b0;\n  border-radius: 5px;\n  overflow: hidden;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const CastCard = styled.img`\n  width: 100%;\n  border-radius: 5px;\n  overflow: hidden;\n  object-fit: cover;\n`;\n\nexport const CastName = styled.p`\n  font-weight: 600;\n  text-align: center;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieCast } from 'helpers/Api';\nimport { CastList, CastItem, CastCard, CastName } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovieCast() {\n      try {\n        const data = await fetchMovieCast(movieId);\n        setCast(data.cast);\n      } catch {\n        console.log('error');\n      }\n    }\n    getMovieCast();\n  }, [movieId]);\n\n  if (!cast) {\n    return null;\n  }\n\n  return (\n    <CastList>\n      {cast.map(({ character, name, profile_path }) => {\n        const imageUrl =\n          profile_path !== null\n            ? `https://image.tmdb.org/t/p/w200${profile_path}`\n            : 'https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj';\n        return (\n          <CastItem key={name}>\n            <CastCard src={imageUrl} alt={name} />\n            <CastName>{name}</CastName>\n            <p>Character: </p>\n            <p>{character}</p>\n          </CastItem>\n        );\n      })}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'c40ae92f6b073ed52dd8d039ab6b6211';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrending = async () => {\n  const res = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const res = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const fetchMovieByName = async movieName => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${movieName}&language=en-US&page=1&include_adult=false`\n  );\n  return res.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const res = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const res = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n};\n"],"names":["CastList","styled","CastItem","CastCard","CastName","useState","cast","setCast","movieId","useParams","useEffect","fetchMovieCast","data","console","log","getMovieCast","map","character","name","profile_path","imageUrl","src","alt","API_KEY","axios","fetchTrending","res","fetchMovieById","fetchMovieByName","movieName","fetchMovieReviews"],"sourceRoot":""}